{
  
    
        "post0": {
            "title": "Final Plan",
            "content": "",
            "url": "https://ryanrob327.github.io/csp/2022/10/04/Final-Plan.html",
            "relUrl": "/2022/10/04/Final-Plan.html",
            "date": " • Oct 4, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "College board assignment proof",
            "content": "Image . . Problems I had . On question 3 I incorrectly selected D, I thought that the app would find Alejandra’s location useful considering it could find a restaurant near her, personally, I think this was a bad question but maybe I am just salty. | On question 5 I incorrectly answered A, the difference was that one answer talks about iterating through all elements and the other talks about iterating through all subsequent elements. . | On question 3 I incorrectly selected D, I thought that the values of J and K are replaced but they are actually copied. | .",
            "url": "https://ryanrob327.github.io/csp/week6/2022/09/27/college-board-proof.html",
            "relUrl": "/week6/2022/09/27/college-board-proof.html",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "JavaScript",
            "content": "| JavaScript and html Table | JavaScript Basics | . . function PrintType(output) { // function to output data type and data into terminal console.log(typeof output, &quot;, &quot;, output); } // define a function to hold data for a Person function Person(name, age, residence) { this.name = name; this.age = age; this.residence = residence; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, age: this.age, residence: this.residence, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable student var student = new Person(&quot;Ryan&quot;, 16, &quot;SanDiego&quot;); // object type is easy to work with in JavaScript PrintType(student); // before role PrintType(student.toJSON()); // output of Object and JSON/string associated with student student.setRole(&quot;Student&quot;); // set the role PrintType(student); PrintType(student.toJSON()); . object , Person { name: &#39;Ryan&#39;, age: 16, residence: &#39;SanDiego&#39;, role: &#39;&#39; } string , {&#34;name&#34;:&#34;Ryan&#34;,&#34;age&#34;:16,&#34;residence&#34;:&#34;SanDiego&#34;,&#34;role&#34;:&#34;&#34;} object , Person { name: &#39;Ryan&#39;, age: 16, residence: &#39;SanDiego&#39;, role: &#39;Student&#39; } string , {&#34;name&#34;:&#34;Ryan&#34;,&#34;age&#34;:16,&#34;residence&#34;:&#34;SanDiego&#34;,&#34;role&#34;:&#34;Student&#34;} . // define a student Array of Person(s) var students = [ new Person(&quot;Ryan&quot;, 16, &quot;San Diego&quot;), new Person(&quot;Josh&quot;, 16, &quot;San Diego&quot;), new Person(&quot;Eli&quot;, 16, &quot;San Diego&quot;), new Person(&quot;Jeffery&quot;, 17, &quot;San Diego&quot;) ]; var teacher = new Person(&quot;Mr. M&quot;, &quot;?&quot;, &quot;San Diego&quot;) // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // output of Objects and JSON in CompSci classroom PrintType(compsci.classroom); // constructed classroom object PrintType(compsci.classroom[0].name); // abstract 1st objects name PrintType(compsci.json[0]); // show json conversion of 1st object to string PrintType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object , [ Person { name: &#39;Mr. M&#39;, age: &#39;?&#39;, residence: &#39;San Diego&#39;, role: &#39;Teacher&#39; }, Person { name: &#39;Ryan&#39;, age: 16, residence: &#39;San Diego&#39;, role: &#39;Student&#39; }, Person { name: &#39;Josh&#39;, age: 16, residence: &#39;San Diego&#39;, role: &#39;Student&#39; }, Person { name: &#39;Eli&#39;, age: 16, residence: &#39;San Diego&#39;, role: &#39;Student&#39; }, Person { name: &#39;Jeffery&#39;, age: 17, residence: &#39;San Diego&#39;, role: &#39;Student&#39; } ] string , Mr. M string , {&#34;name&#34;:&#34;Mr. M&#34;,&#34;age&#34;:&#34;?&#34;,&#34;residence&#34;:&#34;San Diego&#34;,&#34;role&#34;:&#34;Teacher&#34;} object , { name: &#39;Mr. M&#39;, age: &#39;?&#39;, residence: &#39;San Diego&#39;, role: &#39;Teacher&#39; } . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Age&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Residence&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.age + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.residence + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameAgeResidenceRole . Mr. M | ? | San Diego | Teacher | Ryan | 16 | San Diego | Student | Josh | 16 | San Diego | Student | Eli | 16 | San Diego | Student | Jeffery | 17 | San Diego | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://ryanrob327.github.io/csp/week5/2022/09/25/JavaScript-Table.html",
            "relUrl": "/week5/2022/09/25/JavaScript-Table.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Tri 1 Final Project Plan",
            "content": "Project Purpose . Meet college board criteria: . use data abstraction | use procedural abstraction | show testing | . My first idea, checkers, meets all criteria . data abstraction with a 2D array when loading the board and pieces. | procedural abstraction with how the player interacts with the screen and interacts with the pieces on the board. | . My second idea, a learning website similar to khan academy . great purpose. | needs some more thought to meet college board criteria. | . Team Roles . Ryan -&gt; scrum master | Jeffery -&gt; backend | Josh -&gt; frontend | Eli -&gt; DevOps | Chris -&gt; backend | Khalid -&gt; frontend | . Scrum Infographic . .",
            "url": "https://ryanrob327.github.io/csp/week5/2022/09/25/Final-scrum-roles.html",
            "relUrl": "/week5/2022/09/25/Final-scrum-roles.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "JavaScript",
            "content": "| JavaScript and html Table | JavaScript Basics | . . Console.log output . This Code cell outputs a string stored in a variable. . var text = &quot;Hello World&quot;; console.log(text); . Hello World . Function . This code cell uses a function to outputs a string. . function Print(Text) { console.log(Text); } Print(text); . Hello World . Data types . This code cell demonstrates the different data types in JavaScript by outputting them with a function. . function PrintType(output) { console.log(typeof output, &quot;, &quot;, output); } PrintType(&quot;string&quot;); PrintType(1); PrintType(true); PrintType([&quot;A&quot;,&quot;B&quot;,&quot;C&quot;]); . string , string number , 1 boolean , true object , [ &#39;A&#39;, &#39;B&#39;, &#39;C&#39; ] . Operators . var addition = 1+1; console.log(addition); var subtraction = 1-1; console.log(subtraction); var multiplication = 1*2; console.log(multiplication); var division = 1/2; console.log(division); var modulus = 3%2; // division remainder console.log(modulus); . 2 0 2 0.5 1 . Classes . function allows for gathering data, the function &quot;Person&quot; collects a name, age, residence, and role | prototype allows for associating methods to a function,the prototype &quot;setRole&quot; allows for you to change the data type &quot;role&quot; in the function &quot;Person&quot; | . // define a function to hold data for a Person function Person(name, age, residence) { this.name = name; this.age = age; this.residence = residence; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, age: this.age, residence: this.residence, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable student var student = new Person(&quot;Ryan&quot;, 16, &quot;SanDiego&quot;); // object type is easy to work with in JavaScript PrintType(student); // before role PrintType(student.toJSON()); // output of Object and JSON/string associated with student student.setRole(&quot;Student&quot;); // set the role PrintType(student); PrintType(student.toJSON()); . object , Person { name: &#39;Ryan&#39;, age: 16, residence: &#39;SanDiego&#39;, role: &#39;&#39; } string , {&#34;name&#34;:&#34;Ryan&#34;,&#34;age&#34;:16,&#34;residence&#34;:&#34;SanDiego&#34;,&#34;role&#34;:&#34;&#34;} object , Person { name: &#39;Ryan&#39;, age: 16, residence: &#39;SanDiego&#39;, role: &#39;Student&#39; } string , {&#34;name&#34;:&#34;Ryan&#34;,&#34;age&#34;:16,&#34;residence&#34;:&#34;SanDiego&#34;,&#34;role&#34;:&#34;Student&#34;} .",
            "url": "https://ryanrob327.github.io/csp/week5/2022/09/24/JavaScript.html",
            "relUrl": "/week5/2022/09/24/JavaScript.html",
            "date": " • Sep 24, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Collaboration",
            "content": "Notes . A computing innovation includes a program as an integral part of its function. | Collaboration that includes diverse perspectives helps avoid bias in the development of computing innovations. Interpersonal skills learned through collaboration: Communication | Consensus Building | Conflict resolution | Negotiation | . | leave comments in code | ask friends and family to test programs and get feedback | . Pair Programing: . Two programmers work together as pair. One (the driver) writes program code, while the other(the observer, pointer, or navigator) reviews each line of program code as it is typed in. Think-Pair-Share: | Students think through a problem alone, pair with a partner to share ideas, and then share results with the class. | . MC . What are the benefits of collaborating with your peers? . Effective collaboration produces a computing innovation that reflects the diversity of talents and perspectives of those who designed it. |",
            "url": "https://ryanrob327.github.io/csp/week4/2022/09/19/Colaboration.html",
            "relUrl": "/week4/2022/09/19/Colaboration.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Psychology of Happiness",
            "content": "Vocabulary . Circumstances . if you win the lottery you may only be happy for a few weeks or months nut it is not permanent happiness | By the time you make $75,000 annually more money will stop making you happy Effort . | it takes work to change your life and be happier | exercising once doesn’t mke you stronger, you have to exercise every day Illusions . | We often forecast that something will make us happy when it really won’t, our mind is lying to us Social connections . | Prioritize other people | Spend time talking to strangers | Help others to help yourself Gratitude . | Instead of thinking about all of the negative things in life, think of the positive things | Write down good things on paper Health . | Get plenty of sleep, 7+ hours | Exercise every day, 30+ mins Moment . | Spend time in the present moment | Pay attention to what you are doing, invest in what you are doing Time . | Time Affluence | Time Famine | Value time more than money | . Note of Gratitude . Short letter written to my close friend, Sammy. . Hi Sammy, you are a great friend, I appreciate that every day you walk to and from school with me. I have noticed that you act like a natural leader, especially in marching band where I am glad to work with you as a section leader. I enjoy hanging out with you, like on saturday when we went to karaoke together I had a blast and it was awesome being with you. . Gratitude List . Very little homework on Wednesday, time to relax. | Marine band played for the marching band before the football game on Friday and we got a chance to ask the marines about their job. | Fly over during the national anthem at football game. | Karaoke with band leadership on Saturday. | . Goals . Get an A on upcoming Calc quiz | Put up stage for marching band | Go to lunch with friends Monday | Try time some management skills to have more time to myself (time how long it takes to do homework for better reference next time) | .",
            "url": "https://ryanrob327.github.io/csp/week4/2022/09/18/Focus-and-Habits.html",
            "relUrl": "/week4/2022/09/18/Focus-and-Habits.html",
            "date": " • Sep 18, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "App Lab",
            "content": "Design . Purpose . To create a quiz and a plan that demonstrates our understanding of the content we have learned this week Functionality . | Have three questions | Each question is a different type Button question (one answer) | Input question | check box question (multiple answers) | . | Score will be kept and shown at the end | Topic will be about AP comp sci Description . Input . | The quiz will ask a question and the user will input an answer to the question Output . | The quiz will score you after each question and change the screen if you got the question correct | . Success . Button question . . This code allows you to select a button and if the button is correct, the program keeps score and the screen changes to the next question. | This code works by detecting if the correct button is pressed and changing the score and the screen. | . Input question . . This code allows you to input your answer and if your answer is correct, the program keeps score and continues to the next screen. | This code works when the “continue” button is pressed by getting the text from the input and if the text is the same as the answer then the score is kept and changing the screen. | . Checkbox question . . This code allows you to select multiple answers at once and if all of your selections are correct, the program keeps score and continues to the final screen. | This code works when the “continue” button is pressed, if both of the proper options are selected then the score is kept and the screen is changed. | . Final screen . . This code shows your score at the end of the quiz. | This code works when the “score button” is pressed by changing the text of the score button to the amount of points you have. | . Challenges . One silly challenge that I ran into was because I was redeclaring the variable “score” every time I changed its value, as a result, the final score kept showing up as zero. | Another challenge I ran into was getting the text from the input box but I was able to look at the documentation on code.org to figure this out. | . See my project here .",
            "url": "https://ryanrob327.github.io/csp/week3/2022/09/08/App-Lab.html",
            "relUrl": "/week3/2022/09/08/App-Lab.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Class Notes",
            "content": "Week 1 . 1. Marching band . got through first part of movt. 1 | to do: update metronome for second part of movt. 1 | prop building labour day weekend | . | . 2. AP Calculus AB . learned limits | turned in summer assignment | to do: study for quiz on tuesday | quiz will include limits and topics from summer assignment | . | . 3. AP Computer Science Principles . learned python | learned bash | to do: make issue, post on review ticket | . | . 4. Concert Band(Brass) . learned stand tunes for football games | to do: practice music for first part of movt. 1 | practice scales for scale test on tuesday | prepare for audition next week | . | . 5. English . reviewed “The New Colossus” poem | began writing my own poem | to do: finish writing my own poem | . | . Week 2 .   1. Marching band 2. AP cluculus 3. AP computer science 4. Concert band(brass) 5. English . Completed | Got through 9 new sets | Took quiz, did alright | learned data abtstraction, HTML fragments | Got through second part of movt. 1 | Went to library, picked up Persepolis | . ToDo | Prepare for Poway Days parade | Study for test this week | Performance task drafting, create applab | Practice for auditions this week | TBD | .",
            "url": "https://ryanrob327.github.io/csp/week1/2022/09/05/Class-Notes.html",
            "relUrl": "/week1/2022/09/05/Class-Notes.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Python_List_Demonstration",
            "content": "InfoDb . Arrays or lists are very useful for storing information in an organized format. InfoDb is an array with information like names, date of birth, residence, cars, favorite shows, and favorite games. &quot;.append&quot; is adding the information in parentheses to InfoDb. . InfoDb = [] # To add data to InfoDB we must use the .append function # A dictionary is made with curly braces {} InfoDb.append({ &quot;FirstName&quot;: &quot;Joshua&quot;, &quot;MiddleName&quot;: &quot;Benjamin&quot;, &quot;LastName&quot;: &quot;Williams&quot;, &quot;DOB&quot;: &quot;January 6&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Owns_Cars&quot;: &quot;2011 Nissan Versa&quot;, &quot;Show&quot;: &quot;SpongeBob&quot;, &quot;Game&quot;: &quot;Apex Legends&quot; }) InfoDb.append({ &quot;FirstName&quot;: &quot;Ryan&quot;, &quot;MiddleName&quot;: &quot;Robert&quot;, &quot;LastName&quot;: &quot;McWeeny&quot;, &quot;DOB&quot;: &quot;March 27&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;ryanrob327@gmail.com&quot;, &quot;Owns_Cars&quot;: &quot;2016 GMC Acadia&quot;, &quot;Show&quot;: &quot;SpongeBob&quot;, &quot;Game&quot;: &quot;Minecraft&quot; }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Joshua&#39;, &#39;MiddleName&#39;: &#39;Benjamin&#39;, &#39;LastName&#39;: &#39;Williams&#39;, &#39;DOB&#39;: &#39;January 6&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Owns_Cars&#39;: &#39;2011 Nissan Versa&#39;, &#39;Show&#39;: &#39;SpongeBob&#39;, &#39;Game&#39;: &#39;Apex Legends&#39;}, {&#39;FirstName&#39;: &#39;Ryan&#39;, &#39;MiddleName&#39;: &#39;Robert&#39;, &#39;LastName&#39;: &#39;McWeeny&#39;, &#39;DOB&#39;: &#39;March 27&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;ryanrob327@gmail.com&#39;, &#39;Owns_Cars&#39;: &#39;2016 GMC Acadia&#39;, &#39;Show&#39;: &#39;SpongeBob&#39;, &#39;Game&#39;: &#39;Minecraft&#39;}] . Reversed list . This block of code flips the order of a list and prints the flipped list using &quot;.reverse()&quot; a function built into python that reverses the order of a list. . list = [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;] print(&#39;Regular List:&#39;, list) list.reverse() print(&#39;Reversed List:&#39;, list) . Regular List: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;] Reversed List: [&#39;6&#39;, &#39;5&#39;, &#39;4&#39;, &#39;3&#39;, &#39;2&#39;, &#39;1&#39;] . Random list . This block of code randomizes the order of a list and prints the randomized list using &quot;random.shuffle()&quot; a function from the random module built into python. . import random print(&#39;Regular List:&#39;, list) random.shuffle(list) print(&#39;Random List:&#39;, list) . Regular List: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;] Random List: [&#39;3&#39;, &#39;5&#39;, &#39;1&#39;, &#39;2&#39;, &#39;4&#39;, &#39;6&#39;] . For Loop . This is an example of printing the data from infoDb using a for loop, it repeats as many times as there are indices in InfoDb printing the result every loop. . def print_data(d_rec): # defines function that prints data print(d_rec[&quot;FirstName&quot;], d_rec[&quot;MiddleName&quot;], d_rec[&quot;LastName&quot;]) # prints data from the dictionary print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, d_rec[&quot;Owns_Cars&quot;]) # end=&quot;&quot; make sure no return occurs print(&quot; t&quot;, &quot;Favorite show: &quot;, d_rec[&quot;Show&quot;]) print(&quot; t&quot;, &quot;Favorite game: &quot;, d_rec[&quot;Game&quot;]) # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Joshua Benjamin Williams Residence: San Diego Birth Day: January 6 Cars: 2011 Nissan Versa Favorite show: SpongeBob Favorite game: Apex Legends Ryan Robert McWeeny Residence: San Diego Birth Day: March 27 Cars: 2016 GMC Acadia Favorite show: SpongeBob Favorite game: Minecraft . While loop . This block of code prints data from infoDb using a while loop, while i is less than the length of InfoDb i iterates through InfoDb printing the result every loop. . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output Joshua Benjamin Williams Residence: San Diego Birth Day: January 6 Cars: 2011 Nissan Versa Favorite show: SpongeBob Favorite game: Apex Legends Ryan Robert McWeeny Residence: San Diego Birth Day: March 27 Cars: 2016 GMC Acadia Favorite show: SpongeBob Favorite game: Minecraft . Recersive Loop . This is a block of code that uses a repeating function to iterate through InfoDb and print the result. This function always calls itself after executing so that it can execute again, this process is called recursion. . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Joshua Benjamin Williams Residence: San Diego Birth Day: January 6 Cars: 2011 Nissan Versa Favorite show: SpongeBob Favorite game: Apex Legends Ryan Robert McWeeny Residence: San Diego Birth Day: March 27 Cars: 2016 GMC Acadia Favorite show: SpongeBob Favorite game: Minecraft . Quiz . This is a quiz made using dictionaries and lists, it is made so that there is no repeating code. This quiz keeps track of your score every time you enter an answer and tells you if it is write or wrong. . question = [] # creates empty list question.append({ # adds dictionary with question and answer to list using .append &quot;Question&quot;: &quot;what is the fastest plane in the world&quot;, &quot;Answer&quot;: &quot;SR-71&quot;, }) question.append({ &quot;Question&quot;: &quot;what is the hightest flying plane in the world&quot;, &quot;Answer&quot;: &quot;X-15&quot;, }) question.append({ &quot;Question&quot;: &quot;what is the largest plane in the world&quot;, &quot;Answer&quot;: &quot;An-225&quot;, }) question.append({ &quot;Question&quot;: &quot;what is the smallest plane in the world&quot;, &quot;Answer&quot;: &quot;BD-5J&quot;, }) points = 0 print(&quot;Take this quiz about planes.&quot;) for i in question: # for loop repeats every time an answer is given print(i[&quot;Question&quot;]) response = input(i[&quot;Question&quot;]) print(response) if response == i[&quot;Answer&quot;]: points += 1 print(&quot;Correct, you have &quot;, points, &quot; points!&quot;) else: print(&quot;Incorrect, the answer was; &quot;, i[&quot;Answer&quot;]) print(&quot;You have finished the quiz with &quot;, points, &quot; out of &quot;, len(question), &quot; points!&quot;) . Take this quiz about planes. what is the fastest plane in the world SR-71 Correct, you have 1 points! what is the hightest flying plane in the world X-15 Correct, you have 2 points! what is the largest plane in the world U-2 Incorrect, the answer was; An-225 what is the smallest plane in the world BD-5J Correct, you have 3 points! You have finished the quiz with 3 out of 4 points! .",
            "url": "https://ryanrob327.github.io/csp/python/week2/2022/08/30/Python_Lists.html",
            "relUrl": "/python/week2/2022/08/30/Python_Lists.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Python Quiz",
            "content": "question = [&quot;what is the fastest plane in the world&quot;, &quot;what is the hightest flying plane in the world&quot;, &quot;what is the largest plane in the world&quot;, &quot;what is the smallest plane in the world&quot;] answer = [&quot;SR-71&quot;, &quot;X-15&quot;, &quot;An-225&quot;, &quot;BD-5J&quot;] points = 0 print(&quot;Take this quiz about planes.&quot;) for i in range(len(question)): print(question[i]) response = input() print(response) if response == answer[i]: points += 1 print(&quot;Correct, you have &quot;, points, &quot; points!&quot;) else: print(&quot;Incorrect, the answer was; &quot;, answer[i]) print(&quot;You have finished the quiz with &quot;, points, &quot; out of &quot;, len(question), &quot; points!&quot;) . Take this quiz about planes. what is the fastest plane in the world SR-71 Correct, you have 1 points! what is the hightest flying plane in the world X-15 Correct, you have 2 points! what is the largest plane in the world U-2 Incorrect, the answer was; An-225 what is the smallest plane in the world BD-5J Correct, you have 3 points! You have finished the quiz with 3 out of 4 points! .",
            "url": "https://ryanrob327.github.io/csp/python/week1/2022/08/28/Python-Quiz.html",
            "relUrl": "/python/week1/2022/08/28/Python-Quiz.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Bash notebook",
            "content": "echo &quot;version check&quot; python --version python2 --version python3 --version . version check Python 3.9.12 Python 2.7.18 Python 3.9.12 . echo &quot;check conda packages&quot; conda list . check conda packages # packages in environment at /home/ryanm/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.4.0 ipykernel : 6.15.1 ipywidgets : not installed jupyter_client : 7.3.4 jupyter_core : 4.11.1 jupyter_server : not installed jupyterlab : not installed nbclient : not installed nbconvert : not installed nbformat : not installed notebook : not installed qtconsole : not installed traitlets : 5.3.0 Available kernels: bash /home/ryanm/.local/share/jupyter/kernels/bash javascript /home/ryanm/.local/share/jupyter/kernels/javascript python3 /home/ryanm/.local/share/jupyter/kernels/python3 . echo &quot;jupyter check&quot; test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . jupyter check python3 /home/ryanm/.local/share/jupyter/kernels/python3 .",
            "url": "https://ryanrob327.github.io/csp/week1/2022/08/25/Bash-notebook.html",
            "relUrl": "/week1/2022/08/25/Bash-notebook.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "First notebook",
            "content": "Print(&quot;Hello World&quot;) .",
            "url": "https://ryanrob327.github.io/csp/week0/2022/08/21/notebook.html",
            "relUrl": "/week0/2022/08/21/notebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "First Markdown",
            "content": "First markdown post . This is a sub heading . This is a description . one two three four | . | . | . | . Example of an image . . A guessing game that I made with python . import random value = random.randint(1, 100) guess = int(input(&quot;Guess a number between 1 and 100&quot;)) while value != guess: if guess &lt; value: print(&quot;too low&quot;) guess = int(input(&quot;Guess a number between 1 and 100&quot;)) elif guess &gt; value: print(&quot;too high&quot;) guess = int(input(&quot;Guess a number between 1 and 100&quot;)) print(&quot;correct!&quot;) .",
            "url": "https://ryanrob327.github.io/csp/week0/2022/08/21/markdown.html",
            "relUrl": "/week0/2022/08/21/markdown.html",
            "date": " • Aug 21, 2022"
        }
        
    
  

  
  

  

  

  
      ,"page3": {
          "title": "About Me",
          "content": "Hi! My name is Ryan I like coding in Python and I am excited for AP computer science this year. .",
          "url": "https://ryanrob327.github.io/csp/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
      ,"page9": {
          "title": "Vocab",
          "content": "tools and equipment . Fastpages . An open source blogging tool with support for Jupyter notebook, markdown, and docs | . File types . .md: used to create web pages | .html: similar to .md files, however, .html is more difficult to use but allows for more effects than .md | .ipynb: jupyter notebook uses python and .md in conjunction | . VS code . Code editor optimized for building and debugging web applications | . WSL . The Windows Subsystem for Linux allows you to run a Linux file system and command line directly on Windows. | . Ubuntu . Operating system for linux, used alongside WSL | . Bash . Command language written for unix shell | . Github . Where code can be stored on the web, used to clone, push, or pull changes in your code | . Json . Text based format used for transferring data | . EC2 . allows computing capacity in the amazon cloud servers | . DNS . Domain Name System is like the phonebook of the internet where you can access all domain names | . Nginx . open source web server that can be used for a multitude of tasks | .",
          "url": "https://ryanrob327.github.io/csp/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://ryanrob327.github.io/csp/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}